// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/applications": {
            "post": {
                "description": "Create a new job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Create job application",
                "parameters": [
                    {
                        "description": "Job Application Data",
                        "name": "jobApplication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CreateJobApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Application created",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/applications/all": {
            "get": {
                "description": "Get all job applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Get all job applications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Candidate ID",
                        "name": "candidate_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "vacancy_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resume ID",
                        "name": "resume_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Applications data",
                        "schema": {
                            "$ref": "#/definitions/genprotos.GetJobApplicationsRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/applications/{applicationId}/steps/{stepId}": {
            "put": {
                "description": "Update an existing job step for a job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Update job step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "applicationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job Step ID",
                        "name": "stepId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job Step Data",
                        "name": "jobStep",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.UpdateJobStepRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Step updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job Step not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a job step for a job application by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Delete job step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "applicationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job Step ID",
                        "name": "stepId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Step deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid job step ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job Step not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/applications/{id}": {
            "get": {
                "description": "Get a job application by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Get job application by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Application data",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a job application by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Delete job application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Application deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid job application ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job Application not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/applications/{id}/confirm": {
            "put": {
                "description": "Update an existing job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Update job application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job Application Data",
                        "name": "jobApplication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.UpdateJobApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Application updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job Application not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/applications/{id}/steps": {
            "get": {
                "description": "Get job steps for a job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Get job steps",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Steps data",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobStepResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new job step for a job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job_applications"
                ],
                "summary": "Create job step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job Step Data",
                        "name": "jobStep",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CreateJobStepRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job Step created",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobStepResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/company": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Create company",
                "parameters": [
                    {
                        "description": "Company data",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/company/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all companies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Get all companies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Industry",
                        "name": "industry",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "website",
                        "name": "website",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyGetAllRes"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/company/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Get company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyGetByIdRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Update company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated company data",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.CompanyRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Company not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a company by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Delete company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid company ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Company not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/department": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "Create department",
                "parameters": [
                    {
                        "description": "Department data",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.DepartmentCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.DepartmentRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/department/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all departments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "Get all departments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CompanyId",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.DepartmentGetAllRes"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/department/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "Get department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.DepartmentGetByIdRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "Update department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated department data",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.DepartmentCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.DepartmentRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Department not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a department by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "Delete department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid department ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Department not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/department/{id}/position": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get position by department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "Get position by department",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DepartmentId",
                        "name": "department_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.PositionGetAllRes"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/evaluations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all evaluations with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Evaluations"
                ],
                "summary": "Get All Evaluations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Evaluator ID",
                        "name": "evaluator_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Evaluations",
                        "schema": {
                            "$ref": "#/definitions/genprotos.EvaluationGetAllRes"
                        }
                    },
                    "401": {
                        "description": "Error while fetching evaluations",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing evaluation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Evaluations"
                ],
                "summary": "Update Evaluation",
                "parameters": [
                    {
                        "description": "Evaluation Data",
                        "name": "evaluation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.EvaluationUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Evaluation Updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Void"
                        }
                    },
                    "401": {
                        "description": "Error while updating evaluation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/evaluations/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new evaluation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Evaluations"
                ],
                "summary": "Create Evaluation",
                "parameters": [
                    {
                        "description": "Evaluation Data",
                        "name": "evaluation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.EvaluationCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Evaluation Created Successfully",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Void"
                        }
                    },
                    "401": {
                        "description": "Error while creating evaluation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/evaluations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get an evaluation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Evaluations"
                ],
                "summary": "Get Evaluation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Evaluation ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Evaluation Data",
                        "schema": {
                            "$ref": "#/definitions/genprotos.EvaluationUpdate"
                        }
                    },
                    "401": {
                        "description": "Error while fetching evaluation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an evaluation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Evaluations"
                ],
                "summary": "Delete Evaluation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Evaluation ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Evaluation Deleted Successfully",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Void"
                        }
                    },
                    "401": {
                        "description": "Error while deleting evaluation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/guides": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List all guides with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guides"
                ],
                "summary": "List All Guides",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guide Title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Guide Content",
                        "name": "content",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Guides",
                        "schema": {
                            "$ref": "#/definitions/genprotos.ListAllGuidesResponse"
                        }
                    },
                    "401": {
                        "description": "Error while listing guides",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing guide",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guides"
                ],
                "summary": "Update Guide",
                "parameters": [
                    {
                        "description": "Guide Data",
                        "name": "guide",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.UpdateGuideRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Guide Updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Void"
                        }
                    },
                    "401": {
                        "description": "Error while updating guide",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new guide",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guides"
                ],
                "summary": "Create Guide",
                "parameters": [
                    {
                        "description": "Guide Data",
                        "name": "guide",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CreateGuideRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Guide Created Successfully",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Void"
                        }
                    },
                    "401": {
                        "description": "Error while creating guide",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/guides/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search for guides by title or content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guides"
                ],
                "summary": "Search Guides",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guide Title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Guide Content",
                        "name": "content",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Found Guides",
                        "schema": {
                            "$ref": "#/definitions/genprotos.ListAllGuidesResponse"
                        }
                    },
                    "401": {
                        "description": "Error while searching guides",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/guides/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a guide by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guides"
                ],
                "summary": "Get Guide",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guide ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Guide Data",
                        "schema": {
                            "$ref": "#/definitions/genprotos.GuideResponse"
                        }
                    },
                    "401": {
                        "description": "Error while fetching guide",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a guide by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guides"
                ],
                "summary": "Delete Guide",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guide ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Guide Deleted Successfully",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Void"
                        }
                    },
                    "401": {
                        "description": "Error while deleting guide",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/job-applications": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobapplication"
                ],
                "summary": "Create job application",
                "parameters": [
                    {
                        "description": "Job Application data",
                        "name": "job_application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplicationCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job application created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/job-applications/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all job applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobapplication"
                ],
                "summary": "Get all job applications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Candidate ID",
                        "name": "candidate_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "vacancy_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resume ID",
                        "name": "resume_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplicationGetAllRes"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/job-applications/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a job application by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobapplication"
                ],
                "summary": "Get job application by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplitcationGetRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing job application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobapplication"
                ],
                "summary": "Update job application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated job application data",
                        "name": "job_application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobApplicationUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job application updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job application not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a job application by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobapplication"
                ],
                "summary": "Delete job application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job application deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid job application ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job application not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get notifications by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get Notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notification_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notifications fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/genprotos.GetAllResponse"
                        }
                    },
                    "401": {
                        "description": "Error while fetching notifications",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Create Notification",
                "parameters": [
                    {
                        "description": "Notification data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CreateNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification created successfully",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Void"
                        }
                    },
                    "401": {
                        "description": "Error while creating notification",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/read_all": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark all notifications as read for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Read All Notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All notifications marked as read",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Void"
                        }
                    },
                    "401": {
                        "description": "Error while marking notifications as read",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/send_all": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Send a notification to all users in a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Send Notification To All",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "company_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Notification data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.SendByCompanyidToUsers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification sent to all users",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Void"
                        }
                    },
                    "401": {
                        "description": "Error while sending notification",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/send_all_users": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Send a notification to all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Send Notification To All Users",
                "parameters": [
                    {
                        "description": "Notification data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.SendByCompanyidToUsers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification sent to all users",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Void"
                        }
                    },
                    "401": {
                        "description": "Error while sending notification",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/offers": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new job offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joboffer"
                ],
                "summary": "Create job offer",
                "parameters": [
                    {
                        "description": "Job Offer data",
                        "name": "job_offer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.CreateJobOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job offer created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/offers/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all job offers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joboffer"
                ],
                "summary": "Get all job offers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobOffersResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/offers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a job offer by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joboffer"
                ],
                "summary": "Get job offer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.JobOfferResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a job offer by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joboffer"
                ],
                "summary": "Delete job offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job offer deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid job offer ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job offer not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/offers/{id}/confirm": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing job offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joboffer"
                ],
                "summary": "Update job offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated job offer data",
                        "name": "job_offer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.UpdateJobOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job offer updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Job offer not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/position": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "position"
                ],
                "summary": "Create position",
                "parameters": [
                    {
                        "description": "Position data",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.PositionCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.PositionRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/position/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all positions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "position"
                ],
                "summary": "Get all positions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DepartmentId",
                        "name": "department_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.PositionGetAllRes"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/position/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "position"
                ],
                "summary": "Get position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.PositionGetByIdRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "position"
                ],
                "summary": "Update position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated position data",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.PositionCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.PositionRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a position by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "position"
                ],
                "summary": "Delete position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid position ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/resume": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new resume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resume"
                ],
                "summary": "Create resume",
                "parameters": [
                    {
                        "description": "Resume data",
                        "name": "resume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.ResumeCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.ResumeRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/resume/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all resumes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resume"
                ],
                "summary": "Get all resumes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserId",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Education",
                        "name": "education",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.ResumeGetAllRes"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/resume/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a resume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resume"
                ],
                "summary": "Get resume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.ResumeGetByIdRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing resume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resume"
                ],
                "summary": "Update resume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated resume data",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.ResumeCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.ResumeRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resume not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a resume by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resume"
                ],
                "summary": "Delete resume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resume deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid resume ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resume not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vacancies": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Create vacancy",
                "parameters": [
                    {
                        "description": "Vacancy data",
                        "name": "vacancy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vacancy created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vacancies/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all vacancies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Get all vacancies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "department_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Position ID",
                        "name": "position_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyGetAllRes"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vacancies/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a vacancy by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Get vacancy by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyGetResUpdateReq"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Update vacancy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated vacancy data",
                        "name": "vacancy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyGetResUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vacancy updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Vacancy not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a vacancy by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Delete vacancy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vacancy deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid vacancy ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Vacancy not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vacancies/{id}/applications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get applications for a specific vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Get vacancy applications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyApplicationsRes"
                        }
                    },
                    "400": {
                        "description": "Invalid vacancy ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Vacancy not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vacancies/{id}/offers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get offers for a specific vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Get vacancy offers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vacancy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genprotos.VacancyOffersRes"
                        }
                    },
                    "400": {
                        "description": "Invalid vacancy ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Vacancy not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "genprotos.Application": {
            "type": "object",
            "properties": {
                "candidate_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "resume": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.CompanyCreateReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "genprotos.CompanyGetAllRes": {
            "type": "object",
            "properties": {
                "companies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.CompanyRes"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.CompanyGetByIdRes": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/genprotos.CompanyRes"
                }
            }
        },
        "genprotos.CompanyRes": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "genprotos.CreateGuideRequest": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.CreateJobApplicationRequest": {
            "type": "object",
            "properties": {
                "applicant_name": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.JobStep"
                    }
                }
            }
        },
        "genprotos.CreateJobOfferRequest": {
            "type": "object",
            "properties": {
                "job_offer": {
                    "$ref": "#/definitions/genprotos.JobOffer"
                }
            }
        },
        "genprotos.CreateJobStepRequest": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.CreateNotification": {
            "type": "object",
            "properties": {
                "is_read": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genprotos.DepartmentCreateReq": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "genprotos.DepartmentGetAllRes": {
            "type": "object",
            "properties": {
                "departments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.DepartmentRes"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.DepartmentGetByIdRes": {
            "type": "object",
            "properties": {
                "department": {
                    "$ref": "#/definitions/genprotos.DepartmentRes"
                }
            }
        },
        "genprotos.DepartmentRes": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "genprotos.EvaluationCreate": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "string"
                },
                "evaluator_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                }
            }
        },
        "genprotos.EvaluationGetAllRes": {
            "type": "object",
            "properties": {
                "Evaluations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.EvaluationUpdate"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.EvaluationUpdate": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "string"
                },
                "evaluator_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                }
            }
        },
        "genprotos.GetAllRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genprotos.GetAllResponse": {
            "type": "object",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.GetAllRequest"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.GetJobApplicationsRequest": {
            "type": "object",
            "properties": {
                "CandidateId": {
                    "type": "string"
                },
                "Pagination": {
                    "$ref": "#/definitions/genprotos.Pagination"
                },
                "ResumeId": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "VacancyId": {
                    "type": "string"
                }
            }
        },
        "genprotos.Guide": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.GuideResponse": {
            "type": "object",
            "properties": {
                "guide": {
                    "$ref": "#/definitions/genprotos.Guide"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.JobApplication": {
            "type": "object",
            "properties": {
                "applicant_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.JobStep"
                    }
                }
            }
        },
        "genprotos.JobApplicationCreate": {
            "type": "object",
            "properties": {
                "candidate_id": {
                    "type": "string"
                },
                "resume_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "vacancy_id": {
                    "type": "string"
                }
            }
        },
        "genprotos.JobApplicationGetAllRes": {
            "type": "object",
            "properties": {
                "JobApplications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.JobApplitcationGetRes"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.JobApplicationResponse": {
            "type": "object",
            "properties": {
                "job_application": {
                    "$ref": "#/definitions/genprotos.JobApplication"
                }
            }
        },
        "genprotos.JobApplicationUpdate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "resume_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.JobApplitcationGetRes": {
            "type": "object",
            "properties": {
                "candidate_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "resume_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "vacancy_id": {
                    "type": "string"
                }
            }
        },
        "genprotos.JobOffer": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "status": {
                    "description": "e.g., \"active\", \"closed\"",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.JobOfferResponse": {
            "type": "object",
            "properties": {
                "job_offer": {
                    "$ref": "#/definitions/genprotos.JobOffer"
                }
            }
        },
        "genprotos.JobOffersResponse": {
            "type": "object",
            "properties": {
                "job_offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.JobOffer"
                    }
                }
            }
        },
        "genprotos.JobStep": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.JobStepResponse": {
            "type": "object",
            "properties": {
                "job_step": {
                    "$ref": "#/definitions/genprotos.JobStep"
                }
            }
        },
        "genprotos.ListAllGuidesResponse": {
            "type": "object",
            "properties": {
                "guides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.Guide"
                    }
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.Offer": {
            "type": "object",
            "properties": {
                "candidate_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.Pagination": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "genprotos.PositionCreateReq": {
            "type": "object",
            "properties": {
                "department_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.PositionGetAllRes": {
            "type": "object",
            "properties": {
                "positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.PositionRes"
                    }
                }
            }
        },
        "genprotos.PositionGetByIdRes": {
            "type": "object",
            "properties": {
                "position": {
                    "$ref": "#/definitions/genprotos.PositionRes"
                }
            }
        },
        "genprotos.PositionRes": {
            "type": "object",
            "properties": {
                "department_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.ResumeCreateReq": {
            "type": "object",
            "properties": {
                "education": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genprotos.ResumeGetAllRes": {
            "type": "object",
            "properties": {
                "resumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.ResumeRes"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.ResumeGetByIdRes": {
            "type": "object",
            "properties": {
                "resume": {
                    "$ref": "#/definitions/genprotos.ResumeRes"
                }
            }
        },
        "genprotos.ResumeRes": {
            "type": "object",
            "properties": {
                "education": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genprotos.SendByCompanyidToUsers": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "genprotos.UpdateGuideRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.UpdateJobApplicationRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "genprotos.UpdateJobOfferRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "job_offer": {
                    "$ref": "#/definitions/genprotos.JobOffer"
                }
            }
        },
        "genprotos.UpdateJobStepRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "step_id": {
                    "type": "string"
                }
            }
        },
        "genprotos.VacancyApplicationsRes": {
            "type": "object",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.Application"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.VacancyCreate": {
            "type": "object",
            "properties": {
                "department_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "position_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.VacancyGetAllRes": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "vacancies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.VacancyGetResUpdateReq"
                    }
                }
            }
        },
        "genprotos.VacancyGetResUpdateReq": {
            "type": "object",
            "properties": {
                "department_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "position_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.VacancyOffersRes": {
            "type": "object",
            "properties": {
                "offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.Offer"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genprotos.Void": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
